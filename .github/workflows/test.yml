name: CI
on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create .env files
        run: |
          echo "MONGODB_AUTH_URI=${{ secrets.MONGODB_AUTH_URI }}" > auth/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> auth/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" > product/.env
          echo "MONGODB_PRODUCT_URI=${{ secrets.MONGODB_PRODUCT_URI }}" >> product/.env
          echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> product/.env
          echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> product/.env

      - name: Validate Mongo connection strings
        run: |
          set -a
          source auth/.env || true
          source product/.env || true
          set +a
          if [[ -z "${MONGODB_AUTH_URI:-}" || ! "${MONGODB_AUTH_URI}" =~ ^mongodb(\+srv)?:\/\/ ]]; then
            echo "ERROR: MONGODB_AUTH_URI is missing or invalid"
            exit 1
          fi
          if [[ -z "${MONGODB_PRODUCT_URI:-}" || ! "${MONGODB_PRODUCT_URI}" =~ ^mongodb(\+srv)?:\/\/ ]]; then
            echo "ERROR: MONGODB_PRODUCT_URI is missing or invalid"
            exit 1
          fi

      - name: Install dependencies (auth)
        working-directory: ./auth
        run: npm ci

      - name: Install dependencies (product)
        working-directory: ./product
        run: npm ci

      - name: Install root deps
        run: npm ci

      - name: Run tests for auth
        working-directory: ./auth
        run: |
          npm test

      - name: Run tests for product (start auth in background)
        run: |
          cd auth && npm start &   # start auth service
          sleep 6                  # wait for auth to be ready
          cd ../product
          npm test